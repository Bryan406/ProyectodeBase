-- 1. Autos en subasta con datos del vendedor y cantidad de pujas
CREATE VIEW vw_autos_subastados AS
SELECT s.SUBASTA_ID, v.VEHICULO_MARCA AS MARCA, v.VEHICULO_MODELO AS MODELO, u.USUARIO_NOMBRE AS VENDEDOR, COUNT(p.PUJA_ID) AS TOTAL_PUJAS
FROM subasta s
JOIN vehiculo v ON s.VEHICULO_ID = v.VEHICULO_ID
JOIN vendedor ven ON v.USUARIO_ID = ven.USUARIO_ID
JOIN usuario u ON ven.USUARIO_ID = u.USUARIO_ID
LEFT JOIN puja p ON s.SUBASTA_ID = p.SUBASTA_ID
WHERE s.SUBASTA_ESTADO = 1
GROUP BY s.SUBASTA_ID;

-- 2. Historial de pujas de un usuario
CREATE VIEW vw_historial_pujas_usuario AS
SELECT u.USUARIO_NOMBRE, v.VEHICULO_MARCA AS MARCA, v.VEHICULO_MODELO AS MODELO, p.PUJA_HORA, p.PUJA_MONTO
FROM puja p
JOIN usuario u ON p.USUARIO_ID = u.USUARIO_ID
JOIN subasta s ON p.SUBASTA_ID = s.SUBASTA_ID
JOIN vehiculo v ON s.VEHICULO_ID = v.VEHICULO_ID
WHERE u.USUARIO_ID = 21
ORDER BY p.PUJA_HORA;

-- 3. Ganadores de subastas
CREATE VIEW vw_ganadores_subastas AS
SELECT p.PUJA_ID, p.USUARIO_ID, p.SUBASTA_ID, p.PUJA_MONTO, p.PUJA_HORA
FROM puja p
JOIN subasta s ON p.SUBASTA_ID = s.SUBASTA_ID
WHERE p.PUJA_MONTO = s.SUBASTA_PAGO_FINAL;

-- 4. Subastas con mayor número de pujas y sin ofertas
CREATE VIEW vw_subastas_mayor_pujas AS
SELECT s.SUBASTA_ID, v.VEHICULO_MARCA AS MARCA, v.VEHICULO_MODELO AS MODELO, COUNT(p.PUJA_ID) AS TOTAL_PUJAS
FROM subasta s
JOIN vehiculo v ON s.VEHICULO_ID = v.VEHICULO_ID
LEFT JOIN puja p ON s.SUBASTA_ID = p.SUBASTA_ID
GROUP BY s.SUBASTA_ID
ORDER BY TOTAL_PUJAS DESC;

-- 5. Comprador con mayor gasto en subastas ganadas
CREATE VIEW vw_comprador_mayor_gasto AS
SELECT u.USUARIO_NOMBRE, SUM(p.PUJA_MONTO) AS TOTAL_GASTADO
FROM puja p
JOIN usuario u ON p.USUARIO_ID = u.USUARIO_ID
WHERE p.PUJA_MONTO = (SELECT MAX(p2.PUJA_MONTO) FROM puja p2 WHERE p2.SUBASTA_ID = p.SUBASTA_ID)
GROUP BY u.USUARIO_ID
ORDER BY TOTAL_GASTADO DESC
LIMIT 1;

-- 6. Vendedores con más autos subastados y porcentaje de ventas
CREATE VIEW vw_vendedores_mas_autos AS
SELECT u.USUARIO_NOMBRE, COUNT(v.VEHICULO_ID) AS AUTOS_SUBASTADOS,
       SUM(CASE WHEN v.VEHICULO_ESTADO_DE_VENTA = 2 THEN 1 ELSE 0 END) * 100.0 / COUNT(v.VEHICULO_ID) AS PORCENTAJE_VENTAS
FROM vendedor ven
JOIN usuario u ON ven.USUARIO_ID = u.USUARIO_ID
JOIN vehiculo v ON ven.USUARIO_ID = v.USUARIO_ID
LEFT JOIN subasta s ON v.VEHICULO_ID = s.VEHICULO_ID
GROUP BY u.USUARIO_ID;

-- 7. Incremento promedio entre precio base y precio final por marca y modelo
CREATE VIEW vw_incremento_precio_promedio AS
SELECT 
    v.VEHICULO_MARCA AS MARCA,
    v.VEHICULO_MODELO AS MODELO,
    AVG(s.SUBASTA_PAGO_FINAL - v.VEHICULO_PRECIO_BASE) AS INCREMENTO_PROMEDIO
FROM 
    vehiculo v
JOIN 
    subasta s ON v.VEHICULO_ID = s.VEHICULO_ID
LEFT JOIN 
    pago p ON p.SUBASTA_ID = s.SUBASTA_ID
WHERE 
    v.VEHICULO_ESTADO_DE_VENTA = 2  -- Solo vehículos vendidos
    AND (s.SUBASTA_ESTADO = 0 OR p.PAGO_ID IS NOT NULL)  -- Subastas finalizadas o con pago
    AND s.SUBASTA_PAGO_FINAL > v.VEHICULO_PRECIO_BASE  -- El precio final debe ser mayor que el precio base
GROUP BY 
    v.VEHICULO_MARCA, v.VEHICULO_MODELO;

-- 8. Autos subastados múltiples veces sin venderse
CREATE VIEW vw_autos_subastados_multiple_veces AS
SELECT v.VEHICULO_ID, v.VEHICULO_MARCA AS MARCA, v.VEHICULO_MODELO AS MODELO, COUNT(s.SUBASTA_ID) AS VECES_SUBASTADO
FROM vehiculo v
JOIN subasta s ON v.VEHICULO_ID = s.VEHICULO_ID
WHERE s.SUBASTA_ESTADO = 0 OR 1  -- Solo consideramos subastas no vendidas
GROUP BY v.VEHICULO_ID
HAVING COUNT(s.SUBASTA_ID) > 1;  -- Solo autos subastados múltiples veces

-- 9. Usuario con mayor cantidad de pujas en un solo día
CREATE VIEW vw_usuario_mayor_pujas_diarias AS
SELECT p.USUARIO_ID, u.USUARIO_NOMBRE, DATE(p.PUJA_HORA) AS FECHA, COUNT(p.PUJA_ID) AS TOTAL_PUJAS
FROM puja p
JOIN usuario u ON p.USUARIO_ID = u.USUARIO_ID
GROUP BY p.USUARIO_ID, FECHA
ORDER BY TOTAL_PUJAS DESC;

-- 10. Información de pagos por ganadores de subastas
CREATE VIEW vw_informacion_pagos_ganadores AS
SELECT u.USUARIO_NOMBRE, s.SUBASTA_PAGO_FINAL, pa.PAGO_FECHA
FROM pago pa
JOIN subasta s ON pa.SUBASTA_ID = s.SUBASTA_ID
JOIN usuario u ON s.USUARIO_ID = u.USUARIO_ID;

-- 11. Evolución del precio promedio de autos vendidos
CREATE VIEW vw_evolucion_precio_promedio AS
SELECT YEAR(s.SUBASTA_FECHA) AS ANIO, AVG(p.PUJA_MONTO) AS PRECIO_PROMEDIO
FROM subasta s
JOIN puja p ON s.SUBASTA_ID = p.SUBASTA_ID
WHERE p.PUJA_MONTO = (SELECT MAX(p2.PUJA_MONTO) FROM puja p2 WHERE p2.SUBASTA_ID = s.SUBASTA_ID)
GROUP BY ANIO
ORDER BY ANIO;

-- 12. Autos vendidos por debajo del 90% del precio base
CREATE VIEW vw_autos_vendidos_bajo_90_precio_base AS
SELECT v.VEHICULO_MARCA AS MARCA, v.VEHICULO_MODELO AS MODELO, s.SUBASTA_PAGO_FINAL AS PRECIO_BASE, p.PUJA_MONTO AS PRECIO_FINAL
FROM subasta s
JOIN vehiculo v ON s.VEHICULO_ID = v.VEHICULO_ID
JOIN puja p ON s.SUBASTA_ID = p.SUBASTA_ID
WHERE p.PUJA_MONTO = (SELECT MAX(p2.PUJA_MONTO) FROM puja p2 WHERE p2.SUBASTA_ID = s.SUBASTA_ID)
AND p.PUJA_MONTO < 0.9 * s.SUBASTA_PAGO_FINAL;

-- 13. Acciones de auditoría
CREATE VIEW vw_acciones_auditoria AS
SELECT AUDITORIA_FECHA_HORA, u.USUARIO_NOMBRE, AUDITORIA_ACCION, AUDITORIA_TABLA_AFECTADA, AUDITORIA_DETALLE_CAMBIO
FROM auditoria a
JOIN usuario u ON a.AUDITORIA_USUARIO_ID = u.USUARIO_ID;
